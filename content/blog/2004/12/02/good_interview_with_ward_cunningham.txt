[%- META
      menu_choice = 'blog'
      page_title  = 'Good interview with Ward Cunningham' %]
<p class="post-footer align-right">
  <span class="date">December 2, 2004</span>
</p>
<h1>Good interview with Ward Cunningham</h1>

<a href="http://www.theserverside.net/talks/videos/WardCunningham/interview.tss?bandwidth=dsl">Ward Cunningham - Architect in the Patterns & Practices group at Microsoft Corp.</a> - I didn't watch the video yet because reading's a lot faster than listening. The interview's filled with lots of pragmatic advice, but this passage really struck me because so many people create an artificial distinction between an architect and a programmer:

<blockquote><b>... When you say we don't need architects, what do you mean by that?</b></blockquote>

<blockquote>What I really mean is we don't want to excuse all developers from being architects. Architecture is so important that everybody has to have it in mind all the time, and to think that we can take the responsibility for good architecture and concentrate it in one individual is the real mistake. The other thing is the practice of architecture. A lot of times what turns out to be really important couldn't be foreseen ahead of time, and so being able to realize that you are facing an architectural issue when it comes up in development, and be prepared to respond to an architectural problem, is what I think is really at the heart of the patterns movement. When we say we would like to hire somebody with experience, what do we really think they have that they get when they have got experience. That [quality] is what we are trying to get at with patterns -- the stuff that is beyond theory but just what works.</blockquote>

<!-- Tags: patterns -->
